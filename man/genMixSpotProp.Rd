% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simMixedSpots.R
\name{genMixSpotProp}
\alias{genMixSpotProp}
\title{Generate training and test cell type composition matrices}
\usage{
genMixSpotProp(
  object,
  cell.ID.column,
  cell.type.column,
  num.sim.spots,
  n.cells = 100,
  train.freq.cells = 2/3,
  train.freq.spots = 2/3,
  proportion.method = c(0.8, 0.2),
  prob.sparity = 0.8,
  balanced.type.cells = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{object}{\code{\linkS4class{SpatialDDLS}} object with
\code{single.cell.real} slot and, optionally, with \code{single.cell.simul}
slot.}

\item{cell.ID.column}{Name or column number corresponding to cell names in
cells metadata.}

\item{cell.type.column}{Name or column number corresponding to cell type of
each cell in cells metadata.}

\item{num.sim.spots}{number of mixed spot profiles to be simulated. It is
recommended to adjust this number according to the number of available
single-cell profiles.}

\item{n.cells}{Number of cells that to be aggregated for each mixed spot (100
by default).}

\item{train.freq.cells}{Proportion of cells used to simulate training mixed
spot transcriptional profiles (2/3 by default).}

\item{train.freq.spots}{Proportion of mixed spot transcriptional profiles
used for training (2/3 by default).}

\item{proportion.method}{Vector of two elements which controls the proportion
of simulated proportions generated by each method (Dirichlet distribution
and "pure" spots). By default, a 80\% of simulated proportions will follow a
Dirichlet distribution, and a 20\% will consist of only 1 cell type. See
Details.}

\item{prob.sparity}{Probability to generate mixed spot proportions in which 1
or more cell types are left. It allows to generate more sparse proportions
in which not all cell types are represented.}

\item{balanced.type.cells}{Boolean indicating whether training and test cells
will be split in a balanced way considering cell types (\code{FALSE} by
default).}

\item{verbose}{Show informative messages during the execution (\code{TRUE} by
default).}
}
\value{
A \code{\linkS4class{SpatialDDLS}} object with \code{prob.cell.types}
slot containing a \code{list} with two \code{\linkS4class{PropCellTypes}}
objects (training and test). For more information about the structure of
this class, see \code{?\linkS4class{PropCellTypes}}.
}
\description{
Generate training and test cell type composition matrices for the simulation
of mixed spot transcriptional profiles with known cell composition using
single-cell expression profiles. The resulting
\code{\linkS4class{PropCellTypes}} object contains a matrix that determines
the proportion of cell types for each spot, and  other information relevant
for subsequent steps. Note this function does not simulate the mixed samples,
this task is performed by the \code{\link{simMixedSpotProfiles}} or
\code{\link{trainDeconvModel}} functions (see Documentation).
}
\details{
First, single-cell profiles are split into training and test subsets (2/3 for
training and 1/3 for test by default (see \code{train.freq.cells})) for a
fair model evaluation. Next, \code{num.sim.spots} mixed spot proportions are
simulated using a Dirichlet distribution but incorporating an arbitrary
number of absent cell types for each spot (controlled by \code{prob.sparity}
parameter), and \code{n.cells} single-cell profiles used to simulate each
mixed sample are set. In addition to Dirichlet-based proportions, a portion
of pure spots (only 1 cell type) for each cell type is generated. The
proportion of spots simulated by each method is controlled by the
\code{proportion.method} parameter. If you want to inspect the distribution
of cell type proportions generated by each method, they can be visualized by
using the \code{\link{showProbPlot}} function (see Documentation).
}
\examples{
set.seed(123) # reproducibility
# simulated data
sce <- SingleCellExperiment::SingleCellExperiment(
  assays = list(
    counts = matrix(
      rpois(30, lambda = 5), nrow = 15, ncol = 10,
      dimnames = list(paste0("Gene", seq(15)), paste0("RHC", seq(10)))
    )
  ),
  colData = data.frame(
    Cell_ID = paste0("RHC", seq(10)),
    Cell_Type = sample(x = paste0("CellType", seq(2)), size = 10,
                       replace = TRUE)
  ),
  rowData = data.frame(
    Gene_ID = paste0("Gene", seq(15))
  )
)
DDLS <- loadSCProfiles(
  single.cell.data = sce,
  cell.ID.column = "Cell_ID",
  gene.ID.column = "Gene_ID"
)
probMatrixValid <- data.frame(
  Cell_Type = paste0("CellType", seq(2)),
  from = c(1, 30),
  to = c(15, 70)
)
DDLS <- genMixSpotProp(
  object = DDLS,
  cell.ID.column = "Cell_ID",
  cell.type.column = "Cell_Type",
  prob.design = probMatrixValid,
  num.sim.spots = 10,
  verbose = TRUE
)

}
\references{
Torroja, C. and SÃ¡nchez-Cabo, F. (2019). digitalDLSorter: A Deep
Learning algorithm to quantify immune cell populations based on scRNA-Seq
data. Frontiers in Genetics 10, 978. doi: \doi{10.3389/fgene.2019.00978}
}
\seealso{
\code{\link{simMixedSpotProfiles}}
\code{\linkS4class{PropCellTypes}}
}
