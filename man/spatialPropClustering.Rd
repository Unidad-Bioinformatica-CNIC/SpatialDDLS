% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialClustering.R
\name{spatialPropClustering}
\alias{spatialPropClustering}
\title{Calculate gradients with respect to predicted cell types/loss for
interpreting a trained deconvolution model}
\usage{
spatialPropClustering(
  object,
  index.st,
  method = "graph",
  k.nn = 10,
  k.centers = 5,
  verbose = TRUE
)
}
\arguments{
\item{object}{\code{\linkS4class{SpatialDDLS}} object with a trained
deconvolution model (\code{trained.model} slot) and pure mixed
transcriptional profiles (\code{mixed.profiles} slot).}

\item{index.st}{Clustering method. It can be \code{graph} () or \code{k.centers} ()}

\item{method}{Clustering method. It can be \code{graph} () or \code{k.centers} ()}

\item{k.nn}{Whether normalize data using logCPM (\code{TRUE} by
default). This parameter is only considered when the method used to
simulate the mixed transcriptional profiles (\code{simMixedProfiles}
function) was \code{"AddRawCount"}. Otherwise, data were already
normalized. This parameter should be set according to the transformation
used to train the model.}

\item{k.centers}{How to scale data. It can be:
\code{"standarize"} (values are centered around the mean with a unit
standard deviation), \code{"rescale"} (values are shifted and rescaled so
that they end up ranging between 0 and 1, by default) or \code{"none"} (no
scaling is performed). This parameter should be set according to the
transformation used to train the model.}

\item{verbose}{Show informative messages during the execution (\code{TRUE} by
default).}
}
\value{
Object containing gradients in the \code{interpret.gradients} slot of
the \code{DeconvDLModel} object (\code{trained.model} slot).
}
\description{
Train a deep neural network model using training data from the
\code{\linkS4class{SpatialDDLS}} object. In addition, the trained model is
evaluated using test data, and prediction results are obtained to determine
its performance (see \code{?\link{calculateEvalMetrics}}).
}
\examples{
\donttest{
set.seed(123)
sce <- SingleCellExperiment::SingleCellExperiment(
  assays = list(
    counts = matrix(
      rpois(30, lambda = 5), nrow = 15, ncol = 10,
      dimnames = list(paste0("Gene", seq(15)), paste0("RHC", seq(10)))
    )
  ),
  colData = data.frame(
    Cell_ID = paste0("RHC", seq(10)),
    Cell_Type = sample(x = paste0("CellType", seq(2)), size = 10,
                       replace = TRUE)
  ),
  rowData = data.frame(
    Gene_ID = paste0("Gene", seq(15))
  )
)
SDDLS <- createSpatialDDLSobject(
  sc.data = sce,
  sc.cell.ID.column = "Cell_ID",
  sc.gene.ID.column = "Gene_ID",
)
SDDLS <- genMixedCellProp(
  object = SDDLS,
  cell.ID.column = "Cell_ID",
  cell.type.column = "Cell_Type",
  num.sim.spots = 50,
  verbose = TRUE
)
SDDLS <- simMixedProfiles(SDDLS)
SDDLS <- trainDeconvModel(
  object = SDDLS,
  batch.size = 12,
  num.epochs = 5
)
## calculating gradients
SDDLS <- interGradientsDL(SDDLS)
}
  
}
\seealso{
\code{\link{plotTrainingHistory}} \code{\link{deconvSpatialDDLS}}
}
